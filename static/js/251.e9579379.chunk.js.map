{"version":3,"sources":["../node_modules/query-string/index.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","service/Trade/SearchResult.js"],"names":["_slicedToArray","__webpack_require__","_toConsumableArray","strictUriEncode","decodeComponent","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","newValue","split","parserForArrayFormat","Object","assign","ret","create","trim","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_param$replace$split","_param$replace$split2","err","return","keys","sort","reduce","Boolean","Array","isArray","keysSorter","a","b","Number","map","exports","stringify","object","index","length","join","encoderForArrayFormat","filter","x","parseUrl","hashStart","url","query","arrayWithoutHoles","iterableToArray","nonIterableSpread","module","arr","i","arr2","iter","prototype","toString","call","from","TypeError","str","charCodeAt","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","left","right","tokens","match","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","Search","Input","enhance","compose","setDisplayName","displayName","inject","injectIntl","withRouter","withHandlers","handleOnInputChange","_ref","tradeStore","e","target","searchProductsSuggest","resetProductsSuggest","handleOnSearch","_ref2","_ref3","_Users_1004589_Documents_projects_side_NFTbay_front_end_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_1004589_Documents_projects_side_NFTbay_front_end_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","searchProducts","stop","_x","apply","this","arguments","lifecycle","componentDidMount","_componentDidMount","_callee2","keyword","values","_context2","props","location","search","queryString","q","observer","getColumns","intl","title","dataIndex","width","render","text","record","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","src","nft","gameInfo","imageUrl","alt","height","formatMessage","id","className","name","sortDirections","sorter","servantType","defaultSortOrder","diffMins","differenceInMinutes","Date","bidEndTime","parseInt","react_intl__WEBPACK_IMPORTED_MODULE_9__","react_number_format__WEBPACK_IMPORTED_MODULE_4___default","maxPrice","displayType","thousandSeparator","decimalScale","fixedDecimalScale","suffix","currentPrice","SearchResult","_ref4","history","_ref4$tradeStore","state","searchSuggests","_ref4$tradeStore$sear","searchResults","contents","pageSize","page","totalElements","totalPages","Fragment","react_throttle__WEBPACK_IMPORTED_MODULE_11__","time","handler","style","size","placeholder","onSearch","onChange","item","idx","onClick","antd__WEBPACK_IMPORTED_MODULE_6__","loading","REQUEST_STATE","LOADING","pagination","total","showSizeChanger","columns","dataSource","onRowClick","row","type","push"],"mappings":"6FAEA,IAAAA,EAAqBC,EAAQ,KAE7BC,EAAyBD,EAAQ,MAEjCE,EAAsBF,EAAQ,MAE9BG,EAAsBH,EAAQ,MA8H9B,SAAAI,EAAAC,EAAAC,GACA,OAAAA,EAAAF,OACAE,EAAAC,OAAAL,EAAAG,GAAAG,mBAAAH,GAGAA,EAGA,SAAAI,EAAAJ,EAAAC,GACA,OAAAA,EAAAG,OACAN,EAAAE,GAGAA,EAmBA,SAAAK,EAAAC,GACA,IAAAC,EAAAD,EAAAE,QAAA,KAEA,WAAAD,EACA,GAGAD,EAAAG,MAAAF,EAAA,GAGA,SAAAG,EAAAJ,EAAAL,GAKA,IAAAU,EAzGA,SAAAV,GACA,IAAAW,EAEA,OAAAX,EAAAY,aACA,YACA,gBAAAC,EAAAd,EAAAe,GACAH,EAAA,aAAAI,KAAAF,GACAA,IAAAG,QAAA,eAEAL,QAKAM,IAAAH,EAAAD,KACAC,EAAAD,GAAA,IAGAC,EAAAD,GAAAF,EAAA,IAAAZ,GARAe,EAAAD,GAAAd,GAWA,cACA,gBAAAc,EAAAd,EAAAe,GACAH,EAAA,UAAAI,KAAAF,GACAA,IAAAG,QAAA,YAEAL,OAKAM,IAAAH,EAAAD,GAKAC,EAAAD,GAAA,GAAAK,OAAAJ,EAAAD,GAAAd,GAJAe,EAAAD,GAAA,CAAAd,GALAe,EAAAD,GAAAd,GAYA,YACA,gBAAAc,EAAAd,EAAAe,GACA,IACAK,EADA,kBAAApB,KAAAqB,MAAA,IAAAb,QAAA,QACAR,EAAAqB,MAAA,KAAArB,EACAe,EAAAD,GAAAM,GAGA,QACA,gBAAAN,EAAAd,EAAAe,QACAG,IAAAH,EAAAD,GAKAC,EAAAD,GAAA,GAAAK,OAAAJ,EAAAD,GAAAd,GAJAe,EAAAD,GAAAd,IAwDAsB,CAJArB,EAAAsB,OAAAC,OAAA,CACApB,QAAA,EACAS,YAAA,QACGZ,IAGHwB,EAAAF,OAAAG,OAAA,MAEA,qBAAApB,EACA,OAAAmB,EAKA,KAFAnB,IAAAqB,OAAAV,QAAA,cAGA,OAAAQ,EAGA,IAAAG,GAAA,EACAC,GAAA,EACAC,OAAAZ,EAEA,IACA,QAAAa,EAAAC,EAAA1B,EAAAe,MAAA,KAAAY,OAAAC,cAAoEN,GAAAG,EAAAC,EAAAG,QAAAC,MAAgER,GAAA,GACpI,IAEAS,EAFAN,EAAA/B,MAEAiB,QAAA,WAAAI,MAAA,KACAiB,EAAA5C,EAAA2C,EAAA,GACAvB,EAAAwB,EAAA,GACAtC,EAAAsC,EAAA,GAIAtC,OAAAkB,IAAAlB,EAAA,KAAAI,EAAAJ,EAAAC,GACAU,EAAAP,EAAAU,EAAAb,GAAAD,EAAAyB,IAEG,MAAAc,GACHV,GAAA,EACAC,EAAAS,EACG,QACH,IACAX,GAAA,MAAAI,EAAAQ,QACAR,EAAAQ,SAEK,QACL,GAAAX,EACA,MAAAC,GAKA,OAAAP,OAAAkB,KAAAhB,GAAAiB,OAAAC,OAAA,SAAA/B,EAAAE,GACA,IAAAd,EAAAyB,EAAAX,GASA,OAPA8B,QAAA5C,IAAA,kBAAAA,IAAA6C,MAAAC,QAAA9C,GAEAY,EAAAE,GAnFA,SAAAiC,EAAAzC,GACA,OAAAuC,MAAAC,QAAAxC,GACAA,EAAAoC,OAGA,kBAAApC,EACAyC,EAAAxB,OAAAkB,KAAAnC,IAAAoC,KAAA,SAAAM,EAAAC,GACA,OAAAC,OAAAF,GAAAE,OAAAD,KACKE,IAAA,SAAArC,GACL,OAAAR,EAAAQ,KAIAR,EAsEAyC,CAAA/C,GAEAY,EAAAE,GAAAd,EAGAY,GACGW,OAAAG,OAAA,OAGH0B,EAAA/C,UACA+C,EAAA1C,QAEA0C,EAAAC,UAAA,SAAAC,EAAArD,GACA,IAAAqD,EACA,SAQA,IAAA3C,EArPA,SAAAV,GACA,OAAAA,EAAAY,aACA,YACA,gBAAAC,GACA,gBAAAF,EAAAZ,GACA,IAAAuD,EAAA3C,EAAA4C,OAEA,YAAAtC,IAAAlB,EACAY,EAIA,GAAAO,OAAAvB,EAAAgB,GADA,OAAAZ,EACA,EAAAD,EAAAe,EAAAb,GAAA,IAAAsD,EAAA,KAAAE,KAAA,KAGA,EAAA1D,EAAAe,EAAAb,GAAA,IAAAF,EAAAwD,EAAAtD,GAAA,KAAAF,EAAAC,EAAAC,IAAAwD,KAAA,QAIA,cACA,gBAAA3C,GACA,gBAAAF,EAAAZ,GACA,YAAAkB,IAAAlB,EACAY,EAIA,GAAAO,OAAAvB,EAAAgB,GADA,OAAAZ,EACA,EAAAD,EAAAe,EAAAb,GAAA,MAAAwD,KAAA,KAGA,EAAA1D,EAAAe,EAAAb,GAAA,MAAAF,EAAAC,EAAAC,IAAAwD,KAAA,QAIA,YACA,gBAAA3C,GACA,gBAAAF,EAAAZ,EAAAuD,GACA,OAAAvD,EAIA,IAAAuD,EACA,EAAAxD,EAAAe,EAAAb,GAAA,IAAAF,EAAAC,EAAAC,IAAAwD,KAAA,KAGA,EAAA7C,EAAAb,EAAAC,EAAAC,IAAAwD,KAAA,MAPA7C,IAWA,QACA,gBAAAE,GACA,gBAAAF,EAAAZ,GACA,YAAAkB,IAAAlB,EACAY,EAIA,GAAAO,OAAAvB,EAAAgB,GADA,OAAAZ,EACA,CAAAD,EAAAe,EAAAb,IAGA,EAAAF,EAAAe,EAAAb,GAAA,IAAAF,EAAAC,EAAAC,IAAAwD,KAAA,SAyLAC,CALAzD,EAAAsB,OAAAC,OAAA,CACAzB,QAAA,EACAG,QAAA,EACAW,YAAA,QACGZ,IAEHwC,EAAAlB,OAAAkB,KAAAa,GAMA,OAJA,IAAArD,EAAAyC,MACAD,EAAAC,KAAAzC,EAAAyC,MAGAD,EAAAU,IAAA,SAAArC,GACA,IAAAd,EAAAsD,EAAAxC,GAEA,YAAAI,IAAAlB,EACA,GAGA,OAAAA,EACAD,EAAAe,EAAAb,GAGA4C,MAAAC,QAAA9C,GACAA,EAAA2C,OAAAhC,EAAAG,GAAA,IAAA2C,KAAA,KAGA1D,EAAAe,EAAAb,GAAA,IAAAF,EAAAC,EAAAC,KACG0D,OAAA,SAAAC,GACH,OAAAA,EAAAJ,OAAA,IACGC,KAAA,MAGHL,EAAAS,SAAA,SAAAvD,EAAAL,GACA,IAAA6D,EAAAxD,EAAAE,QAAA,KAMA,OAJA,IAAAsD,IACAxD,IAAAG,MAAA,EAAAqD,IAGA,CACAC,IAAAzD,EAAAe,MAAA,YACA2C,MAAAtD,EAAAL,EAAAC,GAAAL,2BCpSA,IAAAgE,EAAwBtE,EAAQ,MAEhCuE,EAAsBvE,EAAQ,MAE9BwE,EAAwBxE,EAAQ,MAMhCyE,EAAAhB,QAJA,SAAAiB,GACA,OAAAJ,EAAAI,IAAAH,EAAAG,IAAAF,yBCGAC,EAAAhB,QAVA,SAAAiB,GACA,GAAAxB,MAAAC,QAAAuB,GAAA,CACA,QAAAC,EAAA,EAAAC,EAAA,IAAA1B,MAAAwB,EAAAb,QAAiDc,EAAAD,EAAAb,OAAgBc,IACjEC,EAAAD,GAAAD,EAAAC,GAGA,OAAAC,wBCFAH,EAAAhB,QAJA,SAAAoB,GACA,GAAAvC,OAAAC,YAAAX,OAAAiD,IAAA,uBAAAjD,OAAAkD,UAAAC,SAAAC,KAAAH,GAAA,OAAA3B,MAAA+B,KAAAJ,wBCGAJ,EAAAhB,QAJA,WACA,UAAAyB,UAAA,uFCCAT,EAAAhB,QAAA,SAAA0B,GACA,OAAA3E,mBAAA2E,GAAA7D,QAAA,oBAAA2C,GACA,UAAAzC,OAAAyC,EAAAmB,WAAA,GAAAL,SAAA,IAAAM,qDCFA,IACAC,EAAA,IAAAC,OADA,eACA,MACAC,EAAA,IAAAD,OAAA,wBAEA,SAAAE,EAAAC,EAAAhE,GACA,IAEA,OAAAiE,mBAAAD,EAAA5B,KAAA,KACG,MAAAlB,IAGH,OAAA8C,EAAA7B,OACA,OAAA6B,EAGAhE,KAAA,EAEA,IAAAkE,EAAAF,EAAA5E,MAAA,EAAAY,GACAmE,EAAAH,EAAA5E,MAAAY,GACA,OAAAwB,MAAA4B,UAAAtD,OAAAwD,KAAA,GAAAS,EAAAG,GAAAH,EAAAI,IAGA,SAAApF,EAAAE,GACA,IACA,OAAAgF,mBAAAhF,GACG,MAAAiC,GAGH,IAFA,IAAAkD,EAAAnF,EAAAoF,MAAAT,GAEAX,EAAA,EAAmBA,EAAAmB,EAAAjC,OAAmBc,IAEtCmB,GADAnF,EAAA8E,EAAAK,EAAAnB,GAAAb,KAAA,KACAiC,MAAAT,GAGA,OAAA3E,GAwCA8D,EAAAhB,QAAA,SAAAuC,GACA,qBAAAA,EACA,UAAAd,UAAA,6DAAAc,EAAA,KAGA,IAGA,OAFAA,IAAA1E,QAAA,WAEAqE,mBAAAK,GACG,MAAApD,GAEH,OA/CA,SAAAjC,GAQA,IANA,IAAAsF,EAAA,CACAC,SAAA,eACAC,SAAA,gBAEAJ,EAAAP,EAAAnE,KAAAV,GAEAoF,GAAA,CACA,IAEAE,EAAAF,EAAA,IAAAJ,mBAAAI,EAAA,IACK,MAAAnD,GACL,IAAA3B,EAAAR,EAAAsF,EAAA,IAEA9E,IAAA8E,EAAA,KACAE,EAAAF,EAAA,IAAA9E,GAIA8E,EAAAP,EAAAnE,KAAAV,GAIAsF,EAAA,gBAGA,IAFA,IAAAG,EAAAxE,OAAAkB,KAAAmD,GAEAtB,EAAA,EAAiBA,EAAAyB,EAAAvC,OAAoBc,IAAA,CAErC,IAAAxD,EAAAiF,EAAAzB,GACAhE,IAAAW,QAAA,IAAAiE,OAAApE,EAAA,KAAA8E,EAAA9E,IAGA,OAAAR,EAcA0F,CAAAL,8MC1EMM,EAASC,IAAMD,OAEfE,EAAUC,YACdC,YAAe,CACbC,YAAa,kBAEfC,YAAO,cACPC,aACAC,IACAC,YAAa,CACXC,oBAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAH,OAAoB,SAAAC,GACnCA,EAAEC,OAAO/G,MACX6G,EAAWG,sBAAsBF,EAAEC,OAAO/G,OAE1C6G,EAAWI,yBAGfC,eAAgB,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,WAAH,sBAAAO,EAAA7F,OAAA8F,EAAA,EAAA9F,CAAA+F,EAAAtE,EAAAuE,KAAoB,SAAAC,EAAMxD,GAAN,OAAAsD,EAAAtE,EAAAyE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAvF,MAAA,WAC9B6B,EAD8B,CAAA0D,EAAAvF,KAAA,eAAAuF,EAAAvF,KAAA,EAE1B0E,EAAWe,eAAe5D,GAFA,OAIlC6C,EAAWI,uBAJuB,wBAAAS,EAAAG,SAAAL,MAApB,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,MAOlBC,YAAU,CACFC,kBADE,eAAAC,EAAA7G,OAAA8F,EAAA,EAAA9F,CAAA+F,EAAAtE,EAAAuE,KAAA,SAAAc,IAAA,IAAAxB,EAAAyB,EAAAC,EAAA,OAAAjB,EAAAtE,EAAAyE,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAArG,MAAA,cAEE0E,EAAemB,KAAKS,MAApB5B,WACFyB,EAAUN,KAAKS,MAAMC,SAASC,OAC9BJ,EAASK,IAAYlI,MAAM4H,GAJ3BE,EAAArG,KAAA,EAKA0E,EAAWe,eAAeW,EAAOM,GALjC,wBAAAL,EAAAX,SAAAQ,EAAAL,SAAA,yBAAAI,EAAAL,MAAAC,KAAAC,YAAA,KAQVa,KAGIC,EAAa,SAAAC,GACjB,MAAO,CACL,CACEC,MAAO,GACPC,UAAW,YACXpI,IAAK,YACLqI,MAAO,OACPC,OAAQ,SAACC,EAAMC,GAAP,OAAkBC,EAAAvG,EAAAwG,cAAA,OAAKC,IAAKH,EAAOI,IAAIC,SAASC,SAAUC,IAAI,GAAGC,OAAO,WAElF,CACEb,MAAOD,EAAKe,cAAc,CAAEC,GAAI,iBAChCd,UAAW,oBACXpI,IAAK,OACLsI,OAAQ,SAACC,EAAMC,GAAP,OAAkBC,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,uCAAuCX,EAAOI,IAAIC,SAASO,OACpGC,eAAgB,CAAC,UAAW,UAC5BC,QAAQ,GAEV,CACEnB,MAAOD,EAAKe,cAAc,CAAEC,GAAI,SAChCd,UAAW,kBACXpI,IAAK,OACLqJ,eAAgB,CAAC,UAAW,UAC5Bf,OAAQ,SAACC,EAAMC,GAAP,OAAkBC,EAAAvG,EAAAwG,cAAA,YAAOF,EAAOI,IAAIW,cAC5CD,QAAQ,GAGV,CACEnB,MAAOD,EAAKe,cAAc,CAAEC,GAAI,aAChCd,UAAW,aACXpI,IAAK,WACLwJ,iBAAkB,SAClBH,eAAgB,CAAC,UAAW,UAC5Bf,OAAQ,SAACC,EAAMC,GACb,IAAMiB,EAAWC,8BAAoB,IAAIC,KAAKnB,EAAOoB,YAAa,IAAID,MACtE,OACElB,EAAAvG,EAAAwG,cAAA,QAAMS,UAAU,4BACbU,SAASJ,EAAW,IADvB,IAC6BA,EAAW,KAI5CH,QAAQ,GAEV,CACEnB,MAAOD,EAAKe,cAAc,CAAEC,GAAI,eAChCd,UAAW,eACXpI,IAAK,QACLqI,MAAO,QACPgB,eAAgB,CAAC,UAAW,UAC5Bf,OAAQ,SAACC,EAAMC,GAAP,OACNC,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,8BACbV,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,8BACbV,EAAAvG,EAAAwG,cAACoB,EAAA,iBAAD,CAAkBZ,GAAG,YACrBT,EAAAvG,EAAAwG,cAAA,WACAD,EAAAvG,EAAAwG,cAACoB,EAAA,iBAAD,CAAkBZ,GAAG,iBAEvBT,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,0BACfV,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,yBACbV,EAAAvG,EAAAwG,cAAA,WACED,EAAAvG,EAAAwG,cAACqB,EAAA7H,EAAD,CACEhD,MAAOsJ,EAAOwB,SACdC,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdC,mBAAmB,EACnBC,OAAQ,UAGZ5B,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,+BACbV,EAAAvG,EAAAwG,cAACqB,EAAA7H,EAAD,CACEhD,MAAOsJ,EAAO8B,aACdL,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdC,mBAAmB,EACnBC,OAAQ,aAMlBf,QAAQ,KAKRiB,EAAelF,EACnB,SAAAmF,GAWMA,EAVJ5F,MAUI,IATJ6F,EASID,EATJC,QACAvC,EAQIsC,EARJtC,KACArC,EAOI2E,EAPJ3E,oBACAO,EAMIoE,EANJpE,eAMIsE,EAAAF,EALJzE,WACE4E,EAIED,EAJFC,MACAC,EAGEF,EAHFE,eAGEC,EAAAH,EAFFI,cAAiBC,EAEfF,EAFeE,SAAgBC,GAE/BH,EAFyBI,KAEzBJ,EAF+BG,UAAUE,EAEzCL,EAFyCK,cAEzCL,EAFwDM,WAG5D,OACE1C,EAAAvG,EAAAwG,cAAAD,EAAAvG,EAAAkJ,SAAA,KACE3C,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,8BACbV,EAAAvG,EAAAwG,cAAC2C,EAAA,SAAD,CAAUC,KAAK,MAAMC,QAAQ,YAC3B9C,EAAAvG,EAAAwG,cAACvD,EAAD,CACEqG,MAAO,CAAEnD,MAAO,SAChBoD,KAAK,QACLC,YAAaxD,EAAKe,cAAc,CAAEC,GAAI,sBACtCyC,SAAUvF,EACVwF,SAAU/F,KAIb+E,EAAelI,OAAS,GACvB+F,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,sBACZyB,EAAevI,IAAI,SAACwJ,EAAMC,GACzB,OACErD,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,wBAAwBnJ,IAAK8L,EAAKC,QAAS,kBAAM3F,EAAeyF,KAC5EA,OAQbpD,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,uBAAuBjB,EAAKe,cAAc,CAAEC,GAAI,oBAC/DT,EAAAvG,EAAAwG,cAAA,OAAKS,UAAU,sBACbV,EAAAvG,EAAAwG,cAACsD,EAAA,EAAD,CACEC,QAAStB,IAAUuB,IAAcC,QACjCC,WAAY,CACVC,MAAOnB,EACPoB,iBAAiB,EACjBtB,SAAUA,GAEZuB,QAAStE,EAAWC,GACpBsE,WAAYzB,EACZ0B,WAAY,SAAAC,GACM,OAAZA,EAAIC,KACNlC,EAAQmC,KAAR,kBAAAvM,OAA+BqM,EAAIxD,KACd,OAAZwD,EAAIC,KACblC,EAAQmC,KAAR,kBAAAvM,OAA+BqM,EAAIxD,KACb,QAAbwD,EAAIC,MACblC,EAAQmC,KAAR,eAAAvM,OAA4BqM,EAAIxD,MAGpCuC,KAAK,cAQFlB","file":"static/js/251.e9579379.chunk.js","sourcesContent":["'use strict';\n\nvar _slicedToArray = require(\"/Users/1004589/Documents/projects_side/NFTbay/front-end/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/1004589/Documents/projects_side/NFTbay/front-end/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n      return function (key) {\n        return function (result, value, index) {\n          if (!value) {\n            return result;\n          }\n\n          if (index === 0) {\n            return [[encode(key, options), '=', encode(value, options)].join('')];\n          }\n\n          return [[result, encode(value, options)].join(',')];\n        };\n      };\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n        var newValue = isArray ? value.split(',') : value;\n        accumulator[key] = newValue;\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction extract(input) {\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n  options = Object.assign({\n    decode: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input.split('&')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var param = _step.value;\n\n      var _param$replace$split = param.replace(/\\+/g, ' ').split('='),\n          _param$replace$split2 = _slicedToArray(_param$replace$split, 2),\n          key = _param$replace$split2[0],\n          value = _param$replace$split2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      value = value === undefined ? null : decode(value, options);\n      formatter(decode(key, options), value, ret);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return Object.keys(ret).sort().reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = encoderForArrayFormat(options);\n  var keys = Object.keys(object);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return {\n    url: input.split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","import React, { Fragment } from 'react'\nimport { differenceInMinutes } from 'date-fns'\nimport NumberFormat from 'react-number-format'\nimport { Row, Col, Table, Input } from 'antd'\nimport { observer, inject } from 'mobx-react'\nimport { compose, setDisplayName, withHandlers, lifecycle } from 'recompose'\nimport { FormattedMessage, injectIntl } from 'react-intl'\nimport { withRouter } from 'react-router-dom'\nimport { Throttle } from 'react-throttle'\nimport queryString from 'query-string'\nimport { REQUEST_STATE } from '../../constants/Values'\n\nconst Search = Input.Search\n\nconst enhance = compose(\n  setDisplayName({\n    displayName: 'Search Result',\n  }),\n  inject('tradeStore'),\n  injectIntl,\n  withRouter,\n  withHandlers({\n    handleOnInputChange: ({ tradeStore }) => e => {\n      if (e.target.value) {\n        tradeStore.searchProductsSuggest(e.target.value)\n      } else {\n        tradeStore.resetProductsSuggest()\n      }\n    },\n    handleOnSearch: ({ tradeStore }) => async query => {\n      if (query) {\n        await tradeStore.searchProducts(query)\n      }\n      tradeStore.resetProductsSuggest()\n    },\n  }),\n  lifecycle({\n    async componentDidMount() {\n      const { tradeStore } = this.props\n      const keyword = this.props.location.search\n      const values = queryString.parse(keyword)\n      await tradeStore.searchProducts(values.q)\n    },\n  }),\n  observer\n)\n\nconst getColumns = intl => {\n  return [\n    {\n      title: '',\n      dataIndex: 'thumbnail',\n      key: 'thumbnail',\n      width: '48px',\n      render: (text, record) => <img src={record.nft.gameInfo.imageUrl} alt=\"\" height=\"48px\" />,\n    },\n    {\n      title: intl.formatMessage({ id: 'Product Name' }),\n      dataIndex: 'nft.gameInfo.name',\n      key: 'name',\n      render: (text, record) => <div className=\"table-product-description-container\">{record.nft.gameInfo.name}</div>,\n      sortDirections: ['descend', 'ascend'],\n      sorter: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'Type' }),\n      dataIndex: 'nft.servantType',\n      key: 'type',\n      sortDirections: ['descend', 'ascend'],\n      render: (text, record) => <span>{record.nft.servantType}</span>,\n      sorter: true,\n    },\n\n    {\n      title: intl.formatMessage({ id: 'Deadline' }),\n      dataIndex: 'bidEndTime',\n      key: 'deadline',\n      defaultSortOrder: 'ascend',\n      sortDirections: ['descend', 'ascend'],\n      render: (text, record) => {\n        const diffMins = differenceInMinutes(new Date(record.bidEndTime), new Date())\n        return (\n          <span className=\"table-deadline-container\">\n            {parseInt(diffMins / 60)}:{diffMins % 60}\n          </span>\n        )\n      },\n      sorter: true,\n    },\n    {\n      title: intl.formatMessage({ id: 'Price(EOS)' }),\n      dataIndex: 'currentPrice',\n      key: 'price',\n      width: '270px',\n      sortDirections: ['descend', 'ascend'],\n      render: (text, record) => (\n        <div className=\"table-price-root-container\">\n          <div className=\"table-price-func-container\">\n            <FormattedMessage id=\"Buy now\" />\n            <br />\n            <FormattedMessage id=\"Current Bid\" />\n          </div>\n          <div className=\"table-price-seperator\" />\n          <div className=\"table-price-container\">\n            <div>\n              <NumberFormat\n                value={record.maxPrice}\n                displayType={'text'}\n                thousandSeparator={true}\n                decimalScale={4}\n                fixedDecimalScale={true}\n                suffix={' EOS'}\n              />\n            </div>\n            <div className=\"table-current-bid-container\">\n              <NumberFormat\n                value={record.currentPrice}\n                displayType={'text'}\n                thousandSeparator={true}\n                decimalScale={4}\n                fixedDecimalScale={true}\n                suffix={' EOS'}\n              />\n            </div>\n          </div>\n        </div>\n      ),\n      sorter: true,\n    },\n  ]\n}\n\nconst SearchResult = enhance(\n  ({\n    match,\n    history,\n    intl,\n    handleOnInputChange,\n    handleOnSearch,\n    tradeStore: {\n      state,\n      searchSuggests,\n      searchResults: { contents, page, pageSize, totalElements, totalPages },\n    },\n  }) => {\n    return (\n      <>\n        <div className=\"trade-search-bar-container\">\n          <Throttle time=\"500\" handler=\"onChange\">\n            <Search\n              style={{ width: '682px' }}\n              size=\"large\"\n              placeholder={intl.formatMessage({ id: 'Input search text' })}\n              onSearch={handleOnSearch}\n              onChange={handleOnInputChange}\n            />\n          </Throttle>\n\n          {searchSuggests.length > 0 && (\n            <div className=\"search-suggest-box\">\n              {searchSuggests.map((item, idx) => {\n                return (\n                  <div className=\"search-suggest-result\" key={idx} onClick={() => handleOnSearch(item)}>\n                    {item}\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </div>\n\n        <div className=\"search-result-title\">{intl.formatMessage({ id: 'Search Results' })}</div>\n        <div className=\"search-result-root\">\n          <Table\n            loading={state === REQUEST_STATE.LOADING}\n            pagination={{\n              total: totalElements,\n              showSizeChanger: true,\n              pageSize: pageSize,\n            }}\n            columns={getColumns(intl)}\n            dataSource={contents}\n            onRowClick={row => {\n              if (row.type == 'UTS') {\n                history.push(`/trade/servant/${row.id}`)\n              } else if (row.type == 'UTM') {\n                history.push(`/trade/monster/${row.id}`)\n              } else if (row.type === 'UTI') {\n                history.push(`/trade/item/${row.id}`)\n              }\n            }}\n            size=\"large\"\n          />\n        </div>\n      </>\n    )\n  }\n)\n\nexport default SearchResult\n"],"sourceRoot":""}